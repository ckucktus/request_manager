[tool.poetry]
name = "cache"
version = "0.1.0"
description = ""
authors = ["Андрей Парадник <apa@kode.ru>"]

[[tool.poetry.source]]
name = "appkode"
url = "https://python_user:RXnvSutNWr@nexus.kode.ru/repository/pipy-group/simple"
default = true
secondary = false


[tool.poetry.dependencies]
python = "^3.8"
tenacity = "^8.2"
aioredis = "^2.0.1"


[tool.poetry.group.tests.dependencies]
pytest = "^7.2"
pytest-asyncio = "^0.21"
pytest-cov = "^4.0.0"

[tool.poetry.group.security.dependencies]
bandit = "^1.7.4"
safety = "^2.1"

[tool.poetry.group.linters.dependencies]
black = "^23.1.0"
isort = {extras = ["colors"], version = "^5.12.0"}
mypy = "^1.0.0"
pre-commit = "^3.0.4"
ruff = "^0.0.246"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]
addopts = "--cache-clear --color=yes -vv"
asyncio_mode = "auto"


[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | \.vscode
  | \.idea
)
'''

[tool.mypy]
python_version = 3.8
ignore_missing_imports = true
follow_imports = "silent"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_reexport = true
exclude = [
    'prometheus_data\.py',
    '.venv/',
    'venv/',
]

[tool.isort]
line_length = 120
force_grid_wrap = 0
multi_line_output = 3
use_parentheses = true

[tool.ruff]
target-version = "py38"
line-length = 120
exclude = [
  ".venv",
]
select = [
   "F",  # Pyflakes
   "E",  # pycodestyle
 "C90",  # mccabe
#   "I",  # isort
#   "N",  # pep8-naming
#   "D",  # pydocstyle
  "UP",  # pyupgrade
 "YTT",  # flake8-2020
# "ANN",  # flake8-annotations
#   "S",  # flake8-bandit
 "BLE",  # flake8-blind-except
# "FBT",  # flake8-boolean-trap
   "B",  # flake8-bugbear
   "A",  # flake8-builtins
# "COM",  # flake8-commas
  "C4",  # flake8-comprehensions
 "DTZ",  # flake8-datetimez
 "T10",  # flake8-debugger
#  "EM",  # flake8-errmsg
 "EXE",  # flake8-executable
 "ISC",  # flake8-implicit-str-concat
# "ICN",  # flake8-import-conventions
   "G",  # flake8-logging-format
 "INP",  # flake8-no-pep420
# "PIE",  # flake8-pie
 "T20",  # flake8-print
#  "PT",  # flake8-pytest-style
#   "Q",  # flake8-quotes
# "RET",  # flake8-return
# "SIM",  # flake8-simplify
 "TID",  # flake8-tidy-imports
# "TCH",  # flake8-type-checking
# "ARG",  # flake8-unused-arguments
 "PTH",  # flake8-use-pathlib
 "ERA",  # eradicate
#  "PD",  # pandas-vet
# "PGH",  # pygrep-hooks
#  "PL",  # Pylint
# "TRY",  # tryceratops
 "RSE",  # flake8-raise
 "SLF",  # flake8-self
# "RUF",  # Ruff-specific rules
]

[tool.ruff.mccabe]
max-complexity = 20
